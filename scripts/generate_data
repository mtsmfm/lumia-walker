#! /usr/bin/env ruby

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'

  gem 'pry-byebug'
  gem 'activesupport', require: 'active_support/all'
end

require 'net/http'
require 'json'
require 'pathname'

class BserClient
  def get(path)
    uri = URI("https://open-api.bser.io/#{path}")
    req = Net::HTTP::Get.new(uri, 'Content-Type' => 'application/json', 'x-api-key' => ENV['BSER_API_KEY'])
    http = Net::HTTP.new(uri.hostname, uri.port)
    http.use_ssl = true
    res = http.request(req)
    sleep 1
    raise unless res.code == "200"
    JSON.parse(res.body)
  end
end

data_dir = Pathname.new(__dir__).join('../data')

client = BserClient.new

%w(
  ActionCost
  Area
  AreaSound
  BotAiModel
  BotCraft
  BotMastery
  BotNickName
  BotSkillBuild
  BulletCapacity
  Character
  CharacterAttributes
  CharacterExp
  CharacterLevelUpStat
  CharacterMastery
  CharacterModeModifier
  CharacterSkillVideos
  CharacterSkin
  CharacterState
  CharacterStateGroup
  CharacterVoice
  CharacterVoiceRandomCount
  Collectible
  ControlTypeUse
  CriticalChance
  DropGroup
  EffectAndSound
  Emotion
  FootStep
  GameRankExp
  HookLineProjectile
  HowToFindItem
  ItemArmor
  ItemConsumable
  ItemMisc
  ItemSearchOption
  ItemSpawn
  ItemSpecial
  ItemWeapon
  KeyText
  Level
  LoadingTip
  MasteryExp
  MasteryLevel
  MatchingQueueTier
  Mission
  ModRestrictedArea
  Monster
  MonsterLevelUpStat
  MonsterSpawnLevel
  NaviCollectAndHunt
  NearByArea
  Noise
  PreMadeTeamTierRestrict
  ProductAsset
  ProductCharacter
  ProductInstant
  ProjectileSetting
  RecommendedArea
  RecommendedItemList
  RecommendedList
  RestrictedArea
  Reward
  RewardItem
  Season
  SeasonOutPlayers
  SecurityConsolEvent
  ServerRegion
  ShopProduct
  ShopProductItem
  Skill
  SkillEvolution
  SkillEvolutionPoint
  SkillExtension
  SkillGroup
  SoundGroup
  StartItem
  SummonObject
  SummonObjectStat
  TimeOfDay
  TutorialReward
  WeaponAnimatorLayers
  WeaponMount
  WeaponRoute
  WeaponTypeInfo
).each do |category|
  json = client.get("v1/data/#{category}")
  data_dir.join("#{category.underscore}.json").write(JSON.pretty_generate(json['data']))
end
